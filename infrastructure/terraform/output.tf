# =============================================================================
# Terraform Outputs for Code Quest Infrastructure
# =============================================================================

# =============================================================================
# EKS Cluster Outputs
# =============================================================================

output "cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "cluster_arn" {
  description = "EKS cluster ARN"
  value       = module.eks.cluster_arn
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane"
  value       = module.eks.cluster_security_group_id
}

output "cluster_iam_role_name" {
  description = "IAM role name associated with EKS cluster"
  value       = module.eks.cluster_iam_role_name
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
  sensitive   = true
}

output "cluster_oidc_issuer_url" {
  description = "The URL on the EKS cluster for the OpenID Connect identity provider"
  value       = module.eks.cluster_oidc_issuer_url
}

# =============================================================================
# VPC Outputs
# =============================================================================

output "vpc_id" {
  description = "ID of the VPC where the cluster is deployed"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnets" {
  description = "List of IDs of private subnets"
  value       = module.vpc.private_subnets
}

output "public_subnets" {
  description = "List of IDs of public subnets"
  value       = module.vpc.public_subnets
}

output "intra_subnets" {
  description = "List of IDs of intra subnets"
  value       = module.vpc.intra_subnets
}

# =============================================================================
# RDS Outputs
# =============================================================================

output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = module.rds.db_instance_endpoint
  sensitive   = true
}

output "rds_port" {
  description = "RDS instance port"
  value       = module.rds.db_instance_port
}

output "rds_database_name" {
  description = "RDS database name"
  value       = module.rds.db_instance_name
}

output "rds_username" {
  description = "RDS instance root username"
  value       = module.rds.db_instance_username
  sensitive   = true
}

# =============================================================================
# Load Balancer Outputs
# =============================================================================

output "alb_dns_name" {
  description = "DNS name of the load balancer"
  value       = aws_lb.main.dns_name
}

output "alb_zone_id" {
  description = "Zone ID of the load balancer"
  value       = aws_lb.main.zone_id
}

output "alb_arn" {
  description = "ARN of the load balancer"
  value       = aws_lb.main.arn
}

# =============================================================================
# S3 Outputs
# =============================================================================

output "s3_bucket_id" {
  description = "ID of the S3 bucket"
  value       = aws_s3_bucket.app_data.id
}

output "s3_bucket_arn" {
  description = "ARN of the S3 bucket"
  value       = aws_s3_bucket.app_data.arn
}

output "s3_bucket_domain_name" {
  description = "Domain name of the S3 bucket"
  value       = aws_s3_bucket.app_data.bucket_domain_name
}

# =============================================================================
# Security Outputs
# =============================================================================

output "eks_admin_role_arn" {
  description = "ARN of the EKS admin role"
  value       = aws_iam_role.eks_admin_role.arn
}

output "kms_key_id" {
  description = "KMS key ID for EKS encryption"
  value       = aws_kms_key.eks.key_id
}

output "kms_key_arn" {
  description = "KMS key ARN for EKS encryption"
  value       = aws_kms_key.eks.arn
}

# =============================================================================
# Connection Information
# =============================================================================

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value       = "aws eks update-kubeconfig --region ${var.aws_region} --name ${module.eks.cluster_id}"
}

output "kubectl_config_with_profile" {
  description = "kubectl config with AWS profile"
  value       = "aws eks update-kubeconfig --region ${var.aws_region} --name ${module.eks.cluster_id} --profile ${var.aws_profile}"
}

# =============================================================================
# Application URLs
# =============================================================================

output "application_url" {
  description = "URL to access the application"
  value       = "http://${aws_lb.main.dns_name}"
}

output "application_health_check" {
  description = "Health check URL for the application"
  value       = "http://${aws_lb.main.dns_name}/health"
}

# =============================================================================
# Environment Summary
# =============================================================================

output "environment_summary" {
  description = "Summary of the deployed environment"
  value = {
    environment        = var.environment
    region            = var.aws_region
    cluster_name      = module.eks.cluster_id
    vpc_id           = module.vpc.vpc_id
    database_endpoint = module.rds.db_instance_endpoint
    application_url   = "http://${aws_lb.main.dns_name}"
    kubectl_command   = "aws eks update-kubeconfig --region ${var.aws_region} --name ${module.eks.cluster_id}"
  }
}

# =============================================================================
# Cost Estimation
# =============================================================================

output "estimated_monthly_cost" {
  description = "Estimated monthly cost for the infrastructure"
  value = {
    eks_cluster = "~$73/month (EKS control plane)"
    ec2_nodes   = "~$${var.node_group_desired_size * 30}/month (t3.medium instances)"
    rds_database = "~$15-30/month (db.t3.micro/small)"
    load_balancer = "~$18/month (ALB)"
    nat_gateway   = "~$45/month (if single NAT gateway)"
    total_estimate = "~$${73 + (var.node_group_desired_size * 30) + 25 + 18 + 45}/month"
  }
}
